openapi: 3.0.0
info:
  version: 1.0.0
  title: Magazine
  description: An API for Magazine
servers:
  - url: http://localhost:3000
paths:
  /subscribers:
    get:
      description: Returns a list of subscribers
      security:
        - bearerAuth: []
      responses:
        '200':
          description: List of subscribers returned successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Subscriber'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      description: Creates a new subscriber
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Subscriber'
      responses:
        '201':
          description: Subscriber has been created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscriber'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /subscribers/{_id}:
    get:
      description: Returns the subscriber with the given ID
      security:
        - bearerAuth: []
      parameters:
        - name: _id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Subscriber data returned successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscriber'
        '404':
          description: Subscriber with the given ID was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    patch:
      description: Update a subscriber
      security:
        - bearerAuth: []
      parameters:
        - name: _id
          in: path
          required: true
          schema:
            type: string  
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Subscriber'
      responses:
        '201':
          description: Subscriber has been updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscriber'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      description: Removes a subscriber
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: _id
          required: true
          schema: 
            type: string
      responses:
        '200':
          description: Subscriber has been deleted successfully
          content:
            application/json:
              schema:
                type: object
                example: {}
        '404':
          description: Subscriber based on id is doesn't exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'    
  /archive:
    get:
      description: Returns a list of archive
      security:
        - bearerAuth: []
      responses:
        '200':
          description: List of archive returned successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Archive'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'  
  /certificate:
    get:
      description: Returns a list of certificates
      security:
        - bearerAuth: []
      responses:
        '200':
          description: List of certificates returned successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Certificate'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /certificate/{_id}:
    get:
      description: Returns the certificate with the given ID
      security:
        - bearerAuth: []
      parameters:
        - name: _id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Certificate data returned successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Certificate'
        '404':
          description: Certificate with the given ID was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    patch:
      description: Update a certificate
      security:
        - bearerAuth: []
      parameters:
        - name: _id
          in: path
          required: true
          schema:
            type: string  
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Certificate'
      responses:
        '201':
          description: Certificate has been updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Certificate'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /colleague:
    get:
      description: Returns a list of colleagues
      security:
        - bearerAuth: []
      responses:
        '200':
          description: List of colleagues returned successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Colleague'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      description: Creates a new colleague
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Colleague'
      responses:
        '201':
          description: Colleague has been created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Colleague'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /colleague/{_id}:
    get:
      description: Returns the colleague with the given ID
      security:
        - bearerAuth: []
      parameters:
        - name: _id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Colleague data returned successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Colleague'
        '404':
          description: Colleague with the given ID was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    patch:
      description: Update a colleague
      security:
        - bearerAuth: []
      parameters:
        - name: _id
          in: path
          required: true
          schema:
            type: string  
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Colleague'
      responses:
        '201':
          description: Colleague has been updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Colleague'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      description: Removes a colleague
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: _id
          required: true
          schema: 
            type: string
      responses:
        '200':
          description: Colleague has been deleted successfully
          content:
            application/json:
              schema:
                type: object
                example: {}
        '404':
          description: Colleague based on id is doesn't exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'                                                    
components:
  securitySchemes:
    bearerAuth:            # arbitrary name for the security scheme
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    Person:
      type: object
      required:
        - first_name
        - last_name
        - email
      properties:
        first_name:
          type: string
        last_name:
          type: string
        email:
          type: string
        posts: 
          type: array
          items:
            $ref: '#/components/schemas/Post'
    Subscriber:
      type: object
      required:
        - date
        - name
        - postalCode
        - city
        - address
        - licence_id
        - licenced_seasons
        - seasons_left
        - amount
        - colleague
      properties:
        date:
          type: string
        name:
          type: string
        postalCode:
          type: number
        city:
          type: string
        address:
          type: string  
        licence_id:
          type: string
        licenced_seasons:
          type: number    
        seasons_left:
          type: number
        amount:
          type: number
        colleague:
          type: string
    Archive:
      type: object
      required:
        - date
        - name
        - postalCode
        - city
        - address
        - licence_id
        - licenced_seasons
        - amount
        - colleague
      properties:
        date:
          type: string
        name:
          type: string
        postalCode:
          type: number
        city:
          type: string
        address:
          type: string  
        licence_id:
          type: string
        licenced_seasons:
          type: number    
        amount:
          type: number
        colleague:
          type: string            
    Certificate:
      type: object
      required:
        - name
        - taxNumber
        - headquarters
        - date
        - legalReference
        - director
      properties:
        name:
          type: string
        taxNumber:
          type: string
        headquarters:
          type: string
        date:
          type: string
        legalReference:
          type: string  
        director:
          type: string
        subscriber:
          type: object
          $ref: '#/components/schemas/Subscriber'
    Colleague:
      type: object
      required:
        - name
        - birth_date
        - postalCode
        - city
        - address
        - salary
      properties:
        name:
          type: string
        birth_date:
          type: string
        postalCode:
          type: number
        city:
          type: string
        address:
          type: string  
        salary:
          type: string      
    Post:
      type: object
      required:
        - title
        - body
      properties:
        title:
          type: string
        body:
          type: string
        author:
          type: object
          $ref: '#/components/schemas/Person'
    Error:
      type: object
      required:
        - message
        - has_error
      properties:
        message:
          type: string
        has_error:
          type: boolean
